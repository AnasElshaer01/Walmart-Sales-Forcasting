grouped_data = unseen.groupby('TimeSeriesID')# Iterate over the groupsfor group_name, group_df in grouped_data:    # Iterate over the rows of each group    for i in range(3, len(group_df)):  # Start from 3 to have enough lagged values        # Extract the current row        current_row = group_df.iloc[i:i+1]        # Create lagged features for the current row        lag1 = group_df.iloc[i-1:i].reset_index(drop=True)        lag2 = group_df.iloc[i-2:i-1].reset_index(drop=True)        lag3 = group_df.iloc[i-3:i-2].reset_index(drop=True)        # Make predictions for the current row        prediction = model.predict(current_row)        # Append the lagged features and prediction to the list        lagged_row = {'TimeSeriesID': group_name, 'Lag1': lag1.iloc[0, 0], 'Lag2': lag2.iloc[0, 0], 'Lag3': lag3.iloc[0, 0], 'Prediction': prediction[0]}        lagged_data.append(lagged_row)# Convert the list of dictionaries into a DataFramelagged_data_df = pd.DataFrame(lagged_data)